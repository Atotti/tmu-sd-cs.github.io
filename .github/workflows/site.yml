name: Site CI

on:
  pull_request:
  push:
    branches: [main]

env:
  JEKYLL_ENV: production
  RUBY_VERSION: 3.3
  NODE_VERSION: 18

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      site-dir: ${{ steps.build.outputs.site-dir }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Build Jekyll
        id: build
        run: |
          bundle install --jobs 4 --retry 3
          bundle exec jekyll build --strict_front_matter
          echo "site-dir=_site" >> "$GITHUB_OUTPUT"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  htmlproofer:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: _site
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install html-proofer
        run: gem install html-proofer
      - name: Run html-proofer
        run: >
          htmlproofer _site
          --only-4xx
          --url-ignore "/^https?:\/\//"  # 外部リンクは無視
          --check-html
          --allow-hash-href

  htmlhint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: _site
      - name: Run htmlhint
        run: |
          npm install -g htmlhint@latest
          npx htmlhint "_site/**/*.html" --config .htmlhintrc

  a11y:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: _site
      - name: Run accessibility tests
        run: |
          npm install -g pa11y@latest http-server@latest
          npx http-server _site -p 8080 &
          pa11y-ci http://localhost:8080 --standard WCAG2AA --threshold 0

  lighthouse:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: _site
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun --staticDistDir=_site \
            --assert.preset="lighthouse:recommended" \
            --assert.assertions="categories:performance>0, categories:best-practices>0, categories:accessibility>95, categories:seo>90"

  markdown-spell:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run markdown lint and spell check
        run: |
          npm install -g markdownlint-cli2 codespell
          markdownlint-cli2 "**/*.md"
          codespell -q3 --skip="*.png,*.jpg,*.gif,*.svg"

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [build, htmlproofer, htmlhint, a11y, lighthouse, markdown-spell]
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v3
